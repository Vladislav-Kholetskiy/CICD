name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      
      - name: Build with Maven
        run: mvn clean install
      
      - name: Run Tests
        run: mvn test

  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Установка SSH клиента
      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      # Отладка: Проверка передачи SSH-ключа (не забудьте удалить этот шаг после отладки)
      - name: Debug SSH Key
        run: |
          echo "$SSH_PRIVATE_KEY" | wc -c
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      
      # Установка SSH и деплой
      - name: Set up SSH and Deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          HOME: /home/user
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
          ssh $SERVER_USER@$SERVER_IP 'bash ~/deploy.sh'

      # Проверка успешного SSH подключения
      - name: Test SSH Connection
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "echo SSH connection successful"
